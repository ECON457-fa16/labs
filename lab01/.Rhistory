x <- c(0.5, 0.6);typeof(x)       ## numeric
x <- c(TRUE, FALSE) ;typeof(x)    ## logical
x <- c(T, F)   ;typeof(x)         ## logical
x <- c("a", "b", "c");typeof(x)   ## character
x <- c(1+0i, 2+4i)  ;typeof(x)    ## complex
x <- 9:29   ;typeof(x)            ## integer
x <- c()
seq(9:29)
9:29
seq(9,29, by=1)
seq(9,29, by=2)
x <- 1:3
y <- 10:12
cbind(x, y)
rbind(x, y)
class(x$foo)
x$foo
str(x)
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
x
str(x)
x = seq(0, pi, 0.1)
y = sin(x)
x = seq(0, pi, pi/180)
y = sin(x)
plot(x,y)
x = seq(0, 2*pi, 2*pi/180)
y = sin(x)
plot(x,y)
?plot
plot(x,y, type = "l", col="blue", lwd="4",
main="sin", xlab = "x", ylab = "y")
points(x=pi, y=0, cex =2, col ="dark red")
plot(x,y, type = "l", col="blue", lwd="4",
main="sin", xlab = "x", ylab = "y")
abline(h=0)
abline(v=pi)
points(x=pi, y=0, cex =2, col ="dark red")
plot(x,y, type = "l", col="blue", lwd="4",
main="sin", xlab = "x", ylab = "y")
abline(h=0)
bookdown:::mathquill()
addinexamples:::subsetAddin()
## Setup up coordinate system (with x == y aspect ratio):
plot(c(-2,3), c(-1,5), type = "n", xlab = "x", ylab = "y", asp = 1)
## the x- and y-axis, and an integer grid
abline(h = 0, v = 0, col = "gray60")
plot(x,y, type = "l", col="blue", lwd="4",
main="sin", xlab = "x", ylab = "y")
## the x- and y-axis, and an integer grid
abline(h = 0, v = pi, col = "gray60")
points(x=pi, y=0, cex =2, col ="dark red")
plot(x,y, type = "l", col="blue", lwd="4",
main="sin", xlab = "x", ylab = "y")
## the x- and y-axis, and an integer grid
abline(h = 0, v = pi, col = "gray60")
points(x=pi, y=0, cex =2, col ="dark red")
text(x=pi+0.1, y = 0.3, labels = "Sin", col = "Red")
plot(x,y, type = "l", col="blue", lwd="4",
main="sin", xlab = "x", ylab = "y")
## the x- and y-axis, and an integer grid
abline(h = 0, v = pi, col = "gray60")
points(x=pi, y=0, cex =2, col ="dark red")
text(x=pi+0.2, y = 0.3, labels = "Sin", col = "Red")
plot(x,y, type = "l", col="blue", lwd="4",
main="sin", xlab = "x", ylab = "y")
## the x- and y-axis, and an integer grid
abline(h = 0, v = pi, col = "gray60")
points(x=pi, y=0, cex =2, col ="dark red")
text(x=pi+0.2, y = 0.3, labels = "Here", col = "Red")
plot(x,y, type = "l", col="blue", lwd="4",
main="sin", xlab = "x", ylab = "y")
## the x- and y-axis, and an integer grid
abline(h = 0, v = pi, col = "gray60")
points(x=pi, y=0, cex =2, col ="dark red")
text(x=pi+0.3, y = 0.3, labels = "Here", col = "Red")
plot(x,y, type = "l", col="blue", lwd="4",
main="sin", xlab = "x", ylab = "y")
## the x- and y-axis, and an integer grid
abline(h = 0, v = pi, col = "gray60")
points(x=pi, y=0, cex =2, col ="dark red")
text(x=pi+0.3, y = 0.2, labels = "Here", col = "Red")
plot(x,y, type = "l", col="blue", lwd="4",
main="sin", xlab = "x", ylab = "y")
## the x- and y-axis, and an integer grid
abline(h = 0, v = pi, col = "gray60")
points(x=pi, y=0, cex =2, col ="dark red")
text(x=pi+0.3, y = 0.1, labels = "Here", col = "Red")
pokemon <- read.csv("All_pokemon.csv")
head(pokemon)
str(pokemon)
hp <- pokemon$HP
head(hp)
type1 <- pokemon$Type.I
head(type1)
type2 <- pokemon$Type.II
head(type2)
table(type2)
plot(pokemon$HP, pokemon$Atk)
plot(pokemon$HP, pokemon$Atk, col= "green")
View(pokemon)
Dragon <-  pokemon[type2 == "Dragon"]
Dragon <-  pokemon[Type.II == "Dragon"]
Dragon <-  pokemon[pokemon$Type.II == "Dragon"]
Dragon <-  pokemon[pokemon$Type.II == "Dragon"]
Dragon <-  pokemon[pokemon$Type.I == "Dragon"]
table(pokemon$Type.I)
pokemon$Type.I
type2 <- pokemon["Type.II"]
head(type2)
type2 <- pokemon[,"Type.II"]
head(type2)
pokemon$Type.I
Dragon <-  pokemon[, pokemon$Type.I == "Dragon"]
pokemon$Type.I == "Dragon"
Dragon <-  pokemon[ pokemon$Type.I == "Dragon", ]
head(Dragon)
pokemon[ pokemon$HP >300, ]
pokemon[ pokemon$HP >100, ]
pokemon[ pokemon$HP >150, ]
type2 <- pokemon[,"Type.II"]
write.csv(Dragon, file="Dragon.csv")
write.csv(Dragon,file="Dragon.csv",
file="cleaned-data/gapminder-aus.csv",
quote=FALSE, row.names=FALSE)
write.csv(Dragon,file="Dragon.csv",
quote=FALSE, row.names=FALSE)
write.csv(Dragon, file="Dragon.csv")
z <- 1
z <- 1
while(z > 0.1){
z <- runif(1)
print(z)
}
